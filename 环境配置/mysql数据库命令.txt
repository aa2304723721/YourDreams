1、显示有多少个数据库
show databases;

2、选择哪个数据库
use 数据库名

3、创建新的数据库
create database 数据库名字 default charset=utf8;

4、删除数据库
drop database 数据库名字

5、创建表

create table 表名(
	列名 类型,
	列名 类型,
	列名 类型,
	...
);

6、删除表
drop table 表名

7、显示当前数据库有多少表
show tables;

8、创建表，加约束

如果有主外键
先创建主键表，再创建外键表

如果有主外键
先删除外键表，再删主键表
drop table if exists student;
drop table if exists grade;

create table student(
	sid int primary key,
	sname varchar(20),
	ssex char(1) not null,
	snickname varchar(20) unique,
	saddress varchar(200) default '未知',
	dnum int not null,
	constraint student_dnum_grade foreign key(dnum) references grade(gid) on delete cascade
);

create table grade(
	gid int primary key,
	gname varchar(20) unique not null
);

primary key：		主键
not null:		非空，默认是null
unique:			唯一
default			默认
foreign key		外键


9、主键的生成策略
	1、设置int auto_increment
	create table grade(
		gid int auto_increment primary key,
		gname varchar(20) unique not null
	);

	2、设置char

	创建表
	create table grade2(
		gid char(36)  primary key,
		gname varchar(20) unique not null
	);
	插入数据
	insert into grade2 values(uuid(),'a');
	insert into grade2 values(uuid(),'b');
	查询
	select * from grade2;

	建议使用第一种


	3、还可以设置复合主键（多个列组成主键）

	一般主键都是一个没有逻辑意义的数字，表示唯一就可以了，不参与逻辑


10、增
insert into 表名(列名) values(与列表对应的值);

11、删
delete from 表名 [where 条件];

12、改
update 表名
set 列名=值,列名=值
[where 条件]

13、查询
select * from 表名;  查询所有
select 列名 [改别名],列名 from 表名 [where 条件]


14、查询
	select * from EMP;
	select empno 编号,ename 姓名 from EMP;
	select job from EMP;
	select distinct job from EMP;
	select job,deptno from EMP;
	select distinct job,deptno from EMP;

	select * from EMP where deptno = 10;
	select * from EMP where deptno != 10;
	select * from EMP where deptno <> 10;

	select * from EMP 
	where sal>=1000 and sal<=2000;

	select * from EMP 
	where sal between 1000 and 2000;

	select * from EMP 
	where sal>1000 or sal<2000;


	select * from EMP 
	where not(sal>=1000 and sal<=2000);


	select * from EMP 
	where job like '%MA%';

	select * from EMP 
	where ename like '__R%';

	select * from EMP
	where empno = 7369 or empno = 7521 or empno = 7788;


	select * from EMP
	where empno in (7369,7521,7788);


	select * from EMP
	where comm is null;


	select * from EMP
	where comm is not null;

	select * from EMP
	where comm is not null and comm != 0;

	select * from EMP
	where comm > 0;




	select count(*) from EMP;
	select count(*),count(empno),count(comm) from EMP;
	select max(sal) from EMP;
	select min(sal) from EMP;
	select sum(sal) from EMP;
	select sum(comm) from EMP;
	select avg(sal) from EMP;

	select ename,(sal+comm)*12 年薪 from EMP;
	select comm,IFNULL(comm,0) from EMP;
	select ename,(sal+ifnull(comm,0))*12 年薪 from EMP;

	/*分组之后，只能查询聚合函数和被分组的列*/
	/*分组之后，再聚合*/
	select count(*),deptno
	from EMP
	group by deptno;


	select count(*),deptno,job
	from EMP
	group by deptno,job;


	/*查找各个部门下人数多于4人的部门的编号和人数
		1、要不要分组，按啥分组
		2、过滤条件，分组之后(having)还是分组之前(where)
	*/
	select count(*),deptno
	from EMP
	group by deptno
	having count(*)>4;

	/*查找各个部门下工资大于1000的部门的编号和人数*/

	select count(*),deptno
	from EMP
	where sal>1000
	group by deptno;


	select * from EMP order by sal asc;
	select * from EMP order by sal desc;
	select * from EMP order by ename;

	select * from EMP order by job,sal desc;
	select * from EMP order by empno;
	select * from EMP order by empno,sal desc;


	/*查找各个部门下人数多于4人的部门的编号和人数
	按照人数倒叙排
	*/
	select count(*),deptno
	from EMP
	group by deptno
	having count(*)>4
	order by count(*) desc;


15、关联关系

/*一对一，任选其中一个表当作主键表，另一个表当作外键表*/
drop table if exists husband;
drop table if exists husband;
drop table if exists wife;

create table husband(
	id int auto_increment primary key,
  name varchar(100)
);

create table wife(
	id int auto_increment primary key,
  name varchar(100),
	hid int unique,
	foreign key(hid) references husband(id)
);


create table husband_wife(
	id int auto_increment primary key,
  hid int,
  wid int,
	foreign key(hid) references husband(id),
  foreign key(wid) references husband(id)
);

insert into husband(id,name) values(1,'老王');
insert into husband(id,name) values(2,'小王');


insert into wife(id,name,hid) values(1,'秀芬',1);
insert into wife(id,name,hid) values(2,'秀琴',2);
insert into wife(id,name,hid) values(3,'秀丽',1);


insert into husband_wife(id,hid,wid) values(1,1,1);
insert into husband_wife(id,hid,wid) values(2,1,2);
insert into husband_wife(id,hid,wid) values(3,2,null);



select * from husband;
select * from wife;
select * from husband_wife;

/*一对多，在多方建立外键列*/
create table t_emp(
	id int auto_increment primary key,
  name varchar(100),
  did int,
  foreign key(did) references t_dept(id)
  
);

create table t_dept(
	id int auto_increment primary key,
  name varchar(100)
);


insert into t_dept(id,name) values(1,'人事部');
insert into t_dept(id,name) values(2,'财务部');
insert into t_dept(id,name) values(3,'技术部');

select * from t_dept;

insert into t_emp(id,name,did) values(1,'范冰冰',1);
insert into t_emp(id,name,did) values(2,'赵薇',1);
insert into t_emp(id,name,did) values(3,'林心如',1);
insert into t_emp(id,name,did) values(4,'崔永元',2);

select * from t_emp;



/*多对多，新建中间表，作为那两个表的外键表*/
create table t_student(
	id int auto_increment primary key,
  name varchar(100)
);

create table t_subject(
	id int auto_increment primary key,
  name varchar(100)
);

create table t_ middle(
	id int auto_increment primary key,
  stuid int,
	subid int,
  /*num decimal(4,1),*/
  foreign key(stuid) references t_student(id),
  foreign key(subid) references t_subject(id)
);

insert into t_student(id,name) values(1,'刘德华');
insert into t_student(id,name) values(2,'渣渣辉');

select * from t_student;

insert into t_subject(id,name) values(1,'语文');
insert into t_subject(id,name) values(2,'数学');
insert into t_subject(id,name) values(3,'英语');

select * from t_subject;


insert into t_middle(id,stuid,subid) values(1,1,1);
insert into t_middle(id,stuid,subid) values(2,1,2);
insert into t_middle(id,stuid,subid) values(3,1,3);
insert into t_middle(id,stuid,subid) values(4,2,3);

select * from t_middle;




16、连接查询



select * from EMP;
select * from DEPT;

select * from EMP,DEPT;

select count(*) from EMP,DEPT;



/*内连接*/
select *
from EMP e,DEPT d
where e.deptno = d.deptno;


/*查询员工的编号，姓名，所在部门的名字,所在部门的编号*/
select e.empno,e.ename,d.dname,e.deptno
from EMP e,DEPT d
where e.deptno = d.deptno;

select e.empno,e.ename,d.dname,e.deptno
from EMP e inner join DEPT d
on e.deptno = d.deptno;


/*外连接，要指定从哪个表出发，主表和次表。
从主表出发连接，如果次表连接不到，保留主表的信息，次表置为null
*/

select *
from EMP e right outer join DEPT d
on e.deptno = d.deptno;


select *
from EMP e left outer join DEPT d
on e.deptno = d.deptno;



/*自连接，本身既是主键表又是外键表
只是看作两个表
*/


select * from EMP;

新建表
create table t_emp233(
	id int primary key,
	name varchar(20),
	mgr int
	
)
修改增加约束
alter table t_emp233
add constraint t_emp233_fk_mgr foreign key(mgr) references t_emp233(id);


/*查询员工的编号，姓名，上级的姓名*/

select e1.empno,e1.ename,e2.ename
from EMP e1,EMP e2
where e1.mgr = e2.empno;


select e1.empno,e1.ename,e2.ename
from EMP e1 right outer join EMP e2
on e1.mgr = e2.empno;


select DISTINCT empno from EMP e1;
select DISTINCT mgr from EMP e2;


select * from EMP;
select * from SALGRADE;


/*查询员工的编号，姓名，工资等级*/

select e.empno,e.ename,e.sal,s.grade
from EMP e,SALGRADE s
where e.sal between s.losal and s.hisal;


17、创建索引
create index 索引名称 on 表名(列名)